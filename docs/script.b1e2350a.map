{"version":3,"sources":["../js/script.js"],"names":["towerOne","document","querySelector","towerTwo","towerThree","discOne","createElement","discTwo","discThree","discFour","className","id","readyToMove","currentDisc","undefined","onGameStart","appendChild","reset","addEventListener","location","reload","pickDisc","disc","querySelectorAll","style","background","unpickDisc","moveDisc","insertBefore","tower","children","checkForWin","childElementCount","length","alert","parentElement","clientWidth"],"mappings":";AAAA,IAAIA,EAAWC,SAASC,cAAc,aAClCC,EAAWF,SAASC,cAAc,aAClCE,EAAaH,SAASC,cAAc,eAEpCG,EAAUJ,SAASK,cAAc,OACjCC,EAAUN,SAASK,cAAc,OACjCE,EAAYP,SAASK,cAAc,OACnCG,EAAWR,SAASK,cAAc,OACtCD,EAAQK,UAAY,QACpBH,EAAQG,UAAY,QACpBF,EAAUE,UAAY,QACtBD,EAASC,UAAY,QACrBL,EAAQM,GAAK,UACbJ,EAAQI,GAAK,UACbH,EAAUG,GAAK,YACfF,EAASE,GAAK,WAEd,IAAIC,GAAc,EACdC,OAAcC,EAGlB,SAASC,IACRf,EAASgB,YAAYX,GACrBL,EAASgB,YAAYT,GACrBP,EAASgB,YAAYR,GACrBR,EAASgB,YAAYP,GAItBM,IAIA,IAAIE,EAAQhB,SAASC,cAAc,UACnCe,EAAMC,iBAAiB,QAAS,WAC/BC,SAASC,QAAO,KAIjB,IAAIC,EAAW,SAASC,IACvBT,EAAcS,EAAKC,iBAAiB,UAAU,IAClCC,MAAMC,WAAa,mBAC/Bb,GAAc,GAIXc,EAAa,WAChBb,EAAYW,MAAMC,WAAa,sLAC/BZ,OAAcC,EACdF,GAAc,GAIXe,EAAW,SAASL,GACvBA,EAAKM,aAAaf,EAAagB,MAAMC,SAAS,IAC9CjB,EAAYW,MAAMC,WAAa,sLAC/BZ,OAAcC,EACdF,GAAc,GAIXmB,EAAc,WACb3B,EAAW4B,oBAAsB/B,SAASsB,iBAAiB,UAAUU,QACxEC,MAAM,gBAKRlC,EAASkB,iBAAiB,QAAS,WAC9BlB,EAASuB,iBAAiB,UAAUU,OAAS,IAAqB,IAAhBrB,EACrDS,EAASrB,IACiB,IAAhBY,GAAyD,aAAjCC,EAAYsB,cAAcxB,GAC5De,KAC0B,IAAhBd,GAAsD,GAA9BZ,EAASgC,kBAC3CL,EAAS3B,IACkB,IAAhBY,GAA0BC,EAAYuB,YAAcpC,EAAS8B,SAAS,GAAGM,aACpFT,EAAS3B,GACT+B,KAEAG,MAAM,gBAKR/B,EAASe,iBAAiB,QAAS,WAC9Bf,EAASoB,iBAAiB,UAAUU,OAAS,IAAqB,IAAhBrB,EACrDS,EAASlB,IACiB,IAAhBS,GAAyD,aAAjCC,EAAYsB,cAAcxB,GAC5De,KAC0B,IAAhBd,GAAsD,GAA9BT,EAAS6B,kBAC3CL,EAASxB,IACkB,IAAhBS,GAA0BC,EAAYuB,YAAcjC,EAAS2B,SAAS,GAAGM,aACpFT,EAASxB,GACT4B,KAEAG,MAAM,gBAKR9B,EAAWc,iBAAiB,QAAS,WAChCd,EAAWmB,iBAAiB,UAAUU,OAAS,IAAqB,IAAhBrB,EACvDS,EAASjB,IACiB,IAAhBQ,GAAyD,eAAjCC,EAAYsB,cAAcxB,GAC5De,KAC0B,IAAhBd,GAAwD,GAAhCR,EAAW4B,kBAC7CL,EAASvB,IACkB,IAAhBQ,GAA0BC,EAAYuB,YAAchC,EAAW0B,SAAS,GAAGM,aACtFT,EAASvB,GACT2B,KAEAG,MAAM","file":"script.b1e2350a.map","sourceRoot":"../src/pug","sourcesContent":["let towerOne = document.querySelector('#towerOne')\nlet towerTwo = document.querySelector('#towerTwo')\nlet towerThree = document.querySelector('#towerThree')\n\nlet discOne = document.createElement('div')\nlet discTwo = document.createElement('div')\nlet discThree = document.createElement('div')\nlet discFour = document.createElement('div')\ndiscOne.className = 'discs'\ndiscTwo.className = 'discs'\ndiscThree.className = 'discs'\ndiscFour.className = 'discs'\ndiscOne.id = 'discOne'\ndiscTwo.id = 'discTwo' \ndiscThree.id = 'discThree'\ndiscFour.id = 'discFour'\n\nlet readyToMove = false; // given to me by Jimmy\nlet currentDisc = undefined\n\n\nfunction onGameStart() {\n\ttowerOne.appendChild(discOne)\n\ttowerOne.appendChild(discTwo)\n\ttowerOne.appendChild(discThree)\n\ttowerOne.appendChild(discFour)\n\n}\n\nonGameStart()\n\n\n//game reset button - refreshes page -- https://developer.mozilla.org/en-US/docs/Web/API/Location/reload\nlet reset = document.querySelector('.reset')\nreset.addEventListener('click', function() {\n\tlocation.reload(true)\n})\n\n// Selects the top disc on whichever tower\nlet pickDisc = function(disc) {\n\tcurrentDisc = disc.querySelectorAll('.discs')[0]\n\tcurrentDisc.style.background = 'rgb(75, 96, 102)'\n\treadyToMove = true\n}\n\n// deselects a disc if you choose not to move it\nlet unpickDisc = function() {\n\tcurrentDisc.style.background = 'linear-gradient(to right, rgb(83, 91, 92), rgb(133, 133, 133), rgb(225, 225, 225), rgb(72, 77, 91), rgb(100, 101, 110), rgb(138, 132, 132), rgb(255, 255, 255), rgb(169, 169, 169))'\n\tcurrentDisc = undefined\n\treadyToMove = false\n}\n\n//moves disc to target tower\nlet moveDisc = function(disc) {\n\tdisc.insertBefore(currentDisc, tower.children[0])\n\tcurrentDisc.style.background = 'linear-gradient(to right, rgb(83, 91, 92), rgb(133, 133, 133), rgb(225, 225, 225), rgb(72, 77, 91), rgb(100, 101, 110), rgb(138, 132, 132), rgb(255, 255, 255), rgb(169, 169, 169))'\n\tcurrentDisc = undefined\n\treadyToMove = false\n}\n\n// see if all discs are on Tower Three\nlet checkForWin = function() {\n\tif (towerThree.childElementCount === document.querySelectorAll('.discs').length) {\n\t\talert('You got it!')\n\t}\n}\n\n// function for evaluating movement and legal moves for towerOne\ntowerOne.addEventListener('click', function() {\n\tif (towerOne.querySelectorAll('.discs').length > 0 && readyToMove === false) {\n\t\tpickDisc(towerOne)\n\t} else if (readyToMove === true && currentDisc.parentElement.id === 'towerOne') {\n\t\tunpickDisc()\n\t} else if (readyToMove === true && towerOne.childElementCount == 0) {\n\t\tmoveDisc(towerOne)\n\t} else if ((readyToMove === true) && (currentDisc.clientWidth < towerOne.children[0].clientWidth)) {\n\t\tmoveDisc(towerOne)\n\t\tcheckForWin()\n\t} else {\n\t\talert('Try again.')\n\t}\n})\n\n// function for evaluating movement and legal moves for towerTwo\ntowerTwo.addEventListener('click', function() {\n\tif (towerTwo.querySelectorAll('.discs').length > 0 && readyToMove === false) {\n\t\tpickDisc(towerTwo)\n\t} else if (readyToMove === true && currentDisc.parentElement.id === 'towerTwo') {\n\t\tunpickDisc()\n\t} else if (readyToMove === true && towerTwo.childElementCount == 0) {\n\t\tmoveDisc(towerTwo)\n\t} else if ((readyToMove === true) && (currentDisc.clientWidth < towerTwo.children[0].clientWidth)) {\n\t\tmoveDisc(towerTwo)\n\t\tcheckForWin()\n\t} else {\n\t\talert('Try again.')\n\t}\n})\n\n// function for evaluating movement and legal moves for towerThree\ntowerThree.addEventListener('click', function() {\n\tif (towerThree.querySelectorAll('.discs').length > 0 && readyToMove === false) {\n\t\tpickDisc(towerThree)\n\t} else if (readyToMove === true && currentDisc.parentElement.id === 'towerThree') {\n\t\tunpickDisc()\n\t} else if (readyToMove === true && towerThree.childElementCount == 0) {\n\t\tmoveDisc(towerThree)\n\t} else if ((readyToMove === true) && (currentDisc.clientWidth < towerThree.children[0].clientWidth)) {\n\t\tmoveDisc(towerThree)\n\t\tcheckForWin()\n\t} else {\n\t\talert('Try again.')\n\t}\n})\n\n\n\n\n"]}