{"version":3,"sources":["../js/script.js"],"names":["towerOne","document","querySelector","towerTwo","towerThree","discOne","createElement","discTwo","discThree","discFour","className","id","readyToMove","currentDisc","moveCount","onGameStart","appendChild","reset","pickDisc","disc","querySelectorAll","style","background","unpickDisc","moveDisc","insertBefore","children","checkForWin","childElementCount","length","alert","addEventListener","parentElement","clientWidth"],"mappings":";AAAA,IAAMA,EAAWC,SAASC,cAAc,aAClCC,EAAWF,SAASC,cAAc,aAClCE,EAAaH,SAASC,cAAc,eAEpCG,EAAUJ,SAASK,cAAc,OACjCC,EAAUN,SAASK,cAAc,OACjCE,EAAYP,SAASK,cAAc,OACnCG,EAAWR,SAASK,cAAc,OACxCD,EAAQK,UAAY,QACpBH,EAAQG,UAAY,QACpBF,EAAUE,UAAY,QACtBD,EAASC,UAAY,QACrBL,EAAQM,GAAK,UACbJ,EAAQI,GAAK,UACbH,EAAUG,GAAK,YACfF,EAASE,GAAK,WAEd,IAAIC,GAAc,EACdC,EAAc,GACdC,EAAY,EAEhB,SAASC,IACRf,EAASgB,YAAYX,GACrBL,EAASgB,YAAYT,GACrBP,EAASgB,YAAYR,GACrBR,EAASgB,YAAYP,GAGtBM,IAEA,IAAME,EAAQhB,SAASC,cAAc,UAIrC,SAASgB,EAASC,IACjBN,EAAcM,EAAKC,iBAAiB,UAAU,IAClCC,MAAMC,WAAa,gLAC/BV,GAAc,EAIf,SAASW,IACRV,EAAYQ,MAAMC,WAAa,sLAC/BT,EAAc,GACdD,GAAc,EAIf,SAASY,EAASL,GACjBA,EAAKM,aAAaZ,EAAaM,EAAKO,SAAS,IAC7Cb,EAAYQ,MAAMC,WAAa,sLAC/BT,EAAc,GACdD,GAAc,EACdE,IAID,SAASa,IACJvB,EAAWwB,oBAAsB3B,SAASmB,iBAAiB,UAAUS,QACxEC,MAAM,aAAehB,EAAY,UA5BnCG,EAAMc,iBAAiB,QAAShB,KAiChCf,EAAS+B,iBAAiB,QAAS,WAC9B/B,EAASoB,iBAAiB,UAAUS,OAAS,IAAqB,IAAhBjB,EACrDM,EAASlB,IACiB,IAAhBY,GAAyD,aAAjCC,EAAYmB,cAAcrB,GAC5DY,KAC0B,IAAhBX,GAAuD,IAA/BZ,EAAS4B,kBAC3CJ,EAASxB,IACkB,IAAhBY,GAA0BC,EAAYoB,YAAcjC,EAAS0B,SAAS,GAAGO,YACpFT,EAASxB,IACkB,IAAhBY,GAA0BC,EAAYoB,YAAcjC,EAAS0B,SAAS,GAAGO,aACpFV,MAKFpB,EAAS4B,iBAAiB,QAAS,WAC9B5B,EAASiB,iBAAiB,UAAUS,OAAS,IAAqB,IAAhBjB,EACrDM,EAASf,IACiB,IAAhBS,GAAyD,aAAjCC,EAAYmB,cAAcrB,GAC5DY,KAC0B,IAAhBX,GAAuD,IAA/BT,EAASyB,kBAC3CJ,EAASrB,IACkB,IAAhBS,GAA0BC,EAAYoB,YAAc9B,EAASuB,SAAS,GAAGO,YACpFT,EAASrB,IACkB,IAAhBS,GAA0BC,EAAYoB,YAAc9B,EAASuB,SAAS,GAAGO,aACpFV,MAKFnB,EAAW2B,iBAAiB,QAAS,WAChC3B,EAAWgB,iBAAiB,UAAUS,OAAS,IAAqB,IAAhBjB,EACvDM,EAASd,IACiB,IAAhBQ,GAAyD,eAAjCC,EAAYmB,cAAcrB,GAC5DY,KAC0B,IAAhBX,GAAyD,IAAjCR,EAAWwB,kBAC7CJ,EAASpB,IACkB,IAAhBQ,GAA0BC,EAAYoB,YAAc7B,EAAWsB,SAAS,GAAGO,YACtFT,EAASpB,IACkB,IAAhBQ,GAA0BC,EAAYoB,YAAc7B,EAAWsB,SAAS,GAAGO,aACtFV,IAEDI","file":"script.be77e2f4.map","sourceRoot":"../src/pug","sourcesContent":["const towerOne = document.querySelector('#towerOne')\nconst towerTwo = document.querySelector('#towerTwo')\nconst towerThree = document.querySelector('#towerThree')\n\nconst discOne = document.createElement('div')\nconst discTwo = document.createElement('div')\nconst discThree = document.createElement('div')\nconst discFour = document.createElement('div')\ndiscOne.className = 'discs'\ndiscTwo.className = 'discs'\ndiscThree.className = 'discs'\ndiscFour.className = 'discs'\ndiscOne.id = 'discOne'\ndiscTwo.id = 'discTwo' \ndiscThree.id = 'discThree'\ndiscFour.id = 'discFour'\n\nlet readyToMove = false; // given to me by Jimmy, to operate as a switch\nlet currentDisc = \"\"\nlet moveCount = 0\n\nfunction onGameStart() {\n\ttowerOne.appendChild(discOne)\n\ttowerOne.appendChild(discTwo)\n\ttowerOne.appendChild(discThree)\n\ttowerOne.appendChild(discFour)\n}\n\nonGameStart()\n\nconst reset = document.querySelector('.reset')\nreset.addEventListener('click', onGameStart())\n\n// Selects the top disc on whichever tower\nfunction pickDisc(disc) {\n\tcurrentDisc = disc.querySelectorAll('.discs')[0] // [0] selects the index of the child element within the parent\n\tcurrentDisc.style.background = 'linear-gradient(to right, rgb(104, 68, 68), rgb(133, 133, 133), rgb(225, 225, 225), rgb(74, 26, 26), rgb(111, 43, 43), rgb(137, 84, 84), rgb(255, 255, 255), rgb(98, 68, 68))'\n\treadyToMove = true\n}\n\n// deselects a disc if you choose not to move it\nfunction unpickDisc() {\n\tcurrentDisc.style.background = 'linear-gradient(to right, rgb(83, 91, 92), rgb(133, 133, 133), rgb(225, 225, 225), rgb(72, 77, 91), rgb(100, 101, 110), rgb(138, 132, 132), rgb(255, 255, 255), rgb(169, 169, 169))'\n\tcurrentDisc = \"\"\n\treadyToMove = false\n}\n\n//moves disc to target tower\nfunction moveDisc(disc) {\n\tdisc.insertBefore(currentDisc, disc.children[0])\n\tcurrentDisc.style.background = 'linear-gradient(to right, rgb(83, 91, 92), rgb(133, 133, 133), rgb(225, 225, 225), rgb(72, 77, 91), rgb(100, 101, 110), rgb(138, 132, 132), rgb(255, 255, 255), rgb(169, 169, 169))'\n\tcurrentDisc = \"\"\n\treadyToMove = false\n\tmoveCount++\n}\n\n// see if all discs are on Tower Three\nfunction checkForWin() {\n\tif (towerThree.childElementCount === document.querySelectorAll('.discs').length) {\n\t\talert('Solved in ' + moveCount + ' moves')\n\t}\n}\n\n// function for evaluating movement and legal moves for towerOne\ntowerOne.addEventListener('click', function() {\n\tif (towerOne.querySelectorAll('.discs').length > 0 && readyToMove === false) {\n\t\tpickDisc(towerOne)\n\t} else if (readyToMove === true && currentDisc.parentElement.id === 'towerOne') {\n\t\tunpickDisc()\n\t} else if (readyToMove === true && towerOne.childElementCount === 0) { // allows a disc to be placed on an empty tower\n\t\tmoveDisc(towerOne)\n\t} else if ((readyToMove === true) && (currentDisc.clientWidth < towerOne.children[0].clientWidth)) { // clientWidth accesses the width set in css for each child\n\t\tmoveDisc(towerOne)\n\t} else if ((readyToMove === true) && (currentDisc.clientWidth > towerOne.children[0].clientWidth)) {\n\t\tunpickDisc()\n\t}\n})\n\n// function for evaluating movement and legal moves for towerTwo\ntowerTwo.addEventListener('click', function() {\n\tif (towerTwo.querySelectorAll('.discs').length > 0 && readyToMove === false) {\n\t\tpickDisc(towerTwo)\n\t} else if (readyToMove === true && currentDisc.parentElement.id === 'towerTwo') {\n\t\tunpickDisc()\n\t} else if (readyToMove === true && towerTwo.childElementCount === 0) {\n\t\tmoveDisc(towerTwo)\n\t} else if ((readyToMove === true) && (currentDisc.clientWidth < towerTwo.children[0].clientWidth)) { \n\t\tmoveDisc(towerTwo)\n\t} else if ((readyToMove === true) && (currentDisc.clientWidth > towerTwo.children[0].clientWidth)) {\n\t\tunpickDisc()\n\t}\n})\n\n// function for evaluating movement and legal moves for towerThree\ntowerThree.addEventListener('click', function() {\n\tif (towerThree.querySelectorAll('.discs').length > 0 && readyToMove === false) {\n\t\tpickDisc(towerThree)\n\t} else if (readyToMove === true && currentDisc.parentElement.id === 'towerThree') {\n\t\tunpickDisc()\n\t} else if (readyToMove === true && towerThree.childElementCount === 0) {\n\t\tmoveDisc(towerThree)\n\t} else if ((readyToMove === true) && (currentDisc.clientWidth < towerThree.children[0].clientWidth)) {\n\t\tmoveDisc(towerThree)\n\t} else if ((readyToMove === true) && (currentDisc.clientWidth > towerThree.children[0].clientWidth)) {\n\t\tunpickDisc()\n\t}\n\tcheckForWin()\n})"]}