{"version":3,"sources":["../js/script.js"],"names":["towerOne","document","querySelector","towerTwo","towerThree","t1","t2","t3","discOne","createElement","discTwo","discThree","discFour","className","id","readyToMove","onGameStart","appendChild","reset","addEventListener","location","reload","i","moveDisc","querySelectorAll","discs","evt","console","log","currentTarget","removeChild","insertBefore","children"],"mappings":"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","file":"script.f5aa2ae4.map","sourceRoot":"../src/pug","sourcesContent":["let towerOne = document.querySelector('#towerOne')\nlet towerTwo = document.querySelector('#towerTwo')\nlet towerThree = document.querySelector('#towerThree')\n\nlet t1 = []\nlet t2 = []\nlet t3 = []\n\nlet discOne = document.createElement('div')\nlet discTwo = document.createElement('div')\nlet discThree = document.createElement('div')\nlet discFour = document.createElement('div')\ndiscOne.className = 'discs'\ndiscTwo.className = 'discs'\ndiscThree.className = 'discs'\ndiscFour.className = 'discs'\ndiscOne.id = 'discOne'\ndiscTwo.id = 'discTwo' \ndiscThree.id = 'discThree'\ndiscFour.id = 'discFour'\n\nlet readyToMove = false;\n\nfunction onGameStart() {\n\ttowerOne.appendChild(discOne)\n\ttowerOne.appendChild(discTwo)\n\ttowerOne.appendChild(discThree)\n\ttowerOne.appendChild(discFour)\n\t// t1.push([discOne, discTwo, discThree, discFour])\n\t// console.log(towerOne)\n}\n\nonGameStart()\n// console.log(document.querySelector('#towerOne').childNodes[0])\n\n//game reset button - refreshes page -- https://developer.mozilla.org/en-US/docs/Web/API/Location/reload\nlet reset = document.querySelector('.reset')\nreset.addEventListener('click', function() {\n\tlocation.reload(true)\n})\n\n\nfor (let i = 0; i < 3; i++) {\n\tlet moveDisc = document.querySelectorAll('.towerContainer')[i] //event.currentTarget or event.target\n\tlet discs = document.querySelectorAll('.discs')[i]\n\tmoveDisc.addEventListener('click', function(evt) {\n\t\tconsole.log(evt.currentTarget)\n\t\t// console.log(`${this.id}`)\n\tif (readyToMove === false) {\n\t\treadyToMove = true\n\t\tevt.currentTarget.removeChild(discs) //need to grab by first child\n\t} else if (readyToMove === true) {\n\t\tevt.currentTarget.insertBefore(discs, moveDisc.children[i])//tower one, tower two)\n\t// } else {\n\t// \treadyToMove === false\n\t}\n\n\t})\n}\t\t\n\n\t\t// else\n\t\t// make false\n\n//get discOne to move including separating towers by ID\n// function to identify which disc is on top\n// if/else to verify size of disc \n\n\n//logic to compare size of the ring being moved vs the ring it's being placed on\n\n// if (ring1 < ring2) {\n\n// }\n\n\n// logic to evaluate win status (all rings on towerThree)\n\n// function gameOver() {\n//     if (towerThree = rings) {\n//     console.log('Winner!')\n//     }\n// }\n\n\n\n// Bonus: move counter:\n\n// Bonus: stopwatch\n\n// Bonus: Add rings\n\n\n\n\n"]}